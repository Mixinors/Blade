buildscript {
    repositories {
        maven {
            name = "Minecraft Forge"
            url = "https://files.minecraftforge.net/maven"
        }

        jcenter()

        mavenCentral()
    }

    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true

        classpath group: "org.jetbrains.kotlin", name: "kotlin-gradle-plugin", version: "1.4.0-rc"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "kotlin"

archivesBaseName = project.mod_name + "-" + project.mod_version + "+" + project.mod_target + project.minecraft_version
version = project.mod_version
group = project.mod_group

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

repositories {
    maven {
        name = "Kotlin for Forge"
        url = "https://thedarkcolour.github.io/KotlinForForge/"
    }

    maven {
        name = "Cloth"
        url = "https://dl.bintray.com/shedaniel/cloth"
    }

    maven {
        name = "AutoConfig"
        url = "https://dl.bintray.com/shedaniel/autoconfig1u"
    }

    maven {
        name = "Cloth Config"
        url = "https://dl.bintray.com/shedaniel/cloth-config-2"
    }
}

minecraft {
    mappings channel: "official", version: "${project.minecraft_version}"

    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'blade', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Minecraft
    minecraft "net.minecraftforge:forge:1.16.3-34.0.3"

    // Kotlin for Forge
    fg.deobf(implementation('thedarkcolour:kotlinforforge:1.5.0'))

    // JetBrains Annotations
    compile("org.jetbrains:annotations:19.0.0")

    // AutoConfig
    runtimeOnly(fg.deobf("me.shedaniel:autoconfig1u-forge:${project.auto_config_version}")) {
        transitive = false
    }

    compileOnly("me.shedaniel:autoconfig1u-forge:${project.auto_config_version}") {
        transitive = false
    }

    // Cloth Config
    implementation ("me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}")

    // Cloth Basic Math
    implementation ("me.shedaniel.cloth:basic-math:${project.cloth_basic_math_version}")

    // RoughlyEnoughItems
    implementation ("me.shedaniel:RoughlyEnoughItems:${project.roughly_enough_items_version}")
}
jar {
    manifest {
        attributes([
            "Specification-Title": "blade",
            "Specification-Vendor": "vini2003.xyz"
        ])
    }
}

jar.finalizedBy("reobfJar")

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.4"
        apiVersion = "1.4"
    }
}